{list( ## Data
geom_line(),
# geom_point(),
# geom_point(fill = "white", size = 2.4, shape = 21, stroke = 1),
# geom_point(colour = "white", size = 2.3),
# geom_point(fill = "grey", size = 3.0, shape = 21, stroke = 0, alpha = 0.6),
NULL)} ## Data
ggplot(df) +
{list( ## Settings
aes(x = Time, y = SmO2_GC),
# labs(title = glue::glue(
#     "<span style = 'color:{Palette_JA('Right')}'> </span> "
# )),
coord_cartesian(
xlim = c(NA, NA),
ylim = c(NA, NA)),
theme_JA(),
scale_x_continuous(
name = "time",
# name = "Time (h:mm:ss)",
# labels = format_mmss,
# expand = expansion(mult = 0.01)
),
scale_y_continuous(
name = "smo2",
breaks = scales::breaks_pretty(),
# sec.axis = sec_axis(
#     name = "",
#        transform = ~ (. * (y2max - y2min) - y2max * y1min) / (y1max - y1min) + y2min,
# # aes(y = (yvar - y2min) * (y1max - y1min) / (y2max - y2min) + y1min)
# ),
# expand = expansion(mult = 0.01)
),
# scale_colour_manual(
#   name = NULL,
#   aesthetics = c("colour", "fill"),
#   # breaks = c(),
#   # values = scales::hue_pal()(2),
#   # values = Palette_JA(),
#   # labels = c(),
#   limits = force),
# guides(colour = guide_legend(
#     nrow = 1, byrow = FALSE,
#     override.aes = list(shape = NA, linewidth = 5, alpha = 1))),
NULL)} + ## Settings
{list( ## Data
geom_line(),
# geom_point(),
# geom_point(fill = "white", size = 2.4, shape = 21, stroke = 1),
# geom_point(colour = "white", size = 2.3),
# geom_point(fill = "grey", size = 3.0, shape = 21, stroke = 0, alpha = 0.6),
NULL)} ## Data
ggplot(df) +
{list( ## Settings
aes(x = Time, y = SmO2_VL),
# labs(title = glue::glue(
#     "<span style = 'color:{Palette_JA('Right')}'> </span> "
# )),
coord_cartesian(
xlim = c(NA, NA),
ylim = c(NA, NA)),
theme_JA(),
scale_x_continuous(
name = "time",
# name = "Time (h:mm:ss)",
# labels = format_mmss,
# expand = expansion(mult = 0.01)
),
scale_y_continuous(
name = "smo2",
breaks = scales::breaks_pretty(),
# sec.axis = sec_axis(
#     name = "",
#        transform = ~ (. * (y2max - y2min) - y2max * y1min) / (y1max - y1min) + y2min,
# # aes(y = (yvar - y2min) * (y1max - y1min) / (y2max - y2min) + y1min)
# ),
# expand = expansion(mult = 0.01)
),
# scale_colour_manual(
#   name = NULL,
#   aesthetics = c("colour", "fill"),
#   # breaks = c(),
#   # values = scales::hue_pal()(2),
#   # values = Palette_JA(),
#   # labels = c(),
#   limits = force),
# guides(colour = guide_legend(
#     nrow = 1, byrow = FALSE,
#     override.aes = list(shape = NA, linewidth = 5, alpha = 1))),
NULL)} + ## Settings
{list( ## Data
geom_line(),
# geom_point(),
# geom_point(fill = "white", size = 2.4, shape = 21, stroke = 1),
# geom_point(colour = "white", size = 2.3),
# geom_point(fill = "grey", size = 3.0, shape = 21, stroke = 0, alpha = 0.6),
NULL)} ## Data
df |>
filter(!is.na(Event))
#   dir = "ggplots",
#   width = 220,
#   height = 220*2/3,
#   dpi = 300,
#   units = "mm",
#   device = "png",
#   bg = "white")
# camcorder::gg_stop_recording()
#
## Data Wrangling ================================
df <- mNIRS::read_data(
r"(C:\OneDrive - UBC\HLI\Trail Runners\Processed Data\M02-Data.xlsx)",
nirs_column = c("SmO2_VL", "SmO2_GC"),
sample_column = "Time",
event_column = "Event",
.keep_all = FALSE,
) |>
remove_outliers(
sample_rate = 1,
remove_fixed_values = c(0, 1),
remove_outliers = TRUE
) |>
# mutate(
#     smo2 = case_when(
#         between(time, 1000, 2000) ~ NA,
#         TRUE ~ smo2),
# ) |>
# handle_missing_data(
#     handle_missing_values = "none"
# ) |>
filter_data(
sample_rate = 1,
handle_missing_values = "interpolate",
filter_method = "none",
) |>
print()
df |>
filter(!is.na(Event))
ggplot(df) +
{list( ## Settings
aes(x = Time, y = SmO2_VL),
# labs(title = glue::glue(
#     "<span style = 'color:{Palette_JA('Right')}'> </span> "
# )),
coord_cartesian(
xlim = c(NA, NA),
ylim = c(NA, NA)),
theme_JA(),
scale_x_continuous(
name = "time",
# name = "Time (h:mm:ss)",
# labels = format_mmss,
# expand = expansion(mult = 0.01)
),
scale_y_continuous(
name = "smo2",
breaks = scales::breaks_pretty(),
# sec.axis = sec_axis(
#     name = "",
#        transform = ~ (. * (y2max - y2min) - y2max * y1min) / (y1max - y1min) + y2min,
# # aes(y = (yvar - y2min) * (y1max - y1min) / (y2max - y2min) + y1min)
# ),
# expand = expansion(mult = 0.01)
),
# scale_colour_manual(
#   name = NULL,
#   aesthetics = c("colour", "fill"),
#   # breaks = c(),
#   # values = scales::hue_pal()(2),
#   # values = Palette_JA(),
#   # labels = c(),
#   limits = force),
# guides(colour = guide_legend(
#     nrow = 1, byrow = FALSE,
#     override.aes = list(shape = NA, linewidth = 5, alpha = 1))),
NULL)} + ## Settings
{list( ## Data
geom_line(),
# geom_point(),
# geom_point(fill = "white", size = 2.4, shape = 21, stroke = 1),
# geom_point(colour = "white", size = 2.3),
# geom_point(fill = "grey", size = 3.0, shape = 21, stroke = 0, alpha = 0.6),
NULL)} ## Data
ggplot(df) +
{list( ## Settings
aes(x = Time, y = SmO2_VL),
# labs(title = glue::glue(
#     "<span style = 'color:{Palette_JA('Right')}'> </span> "
# )),
coord_cartesian(
xlim = c(NA, NA),
ylim = c(NA, NA)),
theme_JA(),
scale_x_continuous(
name = "time",
# name = "Time (h:mm:ss)",
# labels = format_mmss,
# expand = expansion(mult = 0.01)
),
scale_y_continuous(
name = "smo2",
breaks = scales::breaks_pretty(),
# sec.axis = sec_axis(
#     name = "",
#        transform = ~ (. * (y2max - y2min) - y2max * y1min) / (y1max - y1min) + y2min,
# # aes(y = (yvar - y2min) * (y1max - y1min) / (y2max - y2min) + y1min)
# ),
# expand = expansion(mult = 0.01)
),
# scale_colour_manual(
#   name = NULL,
#   aesthetics = c("colour", "fill"),
#   # breaks = c(),
#   # values = scales::hue_pal()(2),
#   # values = Palette_JA(),
#   # labels = c(),
#   limits = force),
# guides(colour = guide_legend(
#     nrow = 1, byrow = FALSE,
#     override.aes = list(shape = NA, linewidth = 5, alpha = 1))),
NULL)} + ## Settings
{list( ## Data
geom_vline(xintercept = filter(df, grepl("Exercise", Event))$Time),
geom_line(),
# geom_point(),
# geom_point(fill = "white", size = 2.4, shape = 21, stroke = 1),
# geom_point(colour = "white", size = 2.3),
# geom_point(fill = "grey", size = 3.0, shape = 21, stroke = 0, alpha = 0.6),
NULL)} ## Data
#   dir = "ggplots",
#   width = 220,
#   height = 220*2/3,
#   dpi = 300,
#   units = "mm",
#   device = "png",
#   bg = "white")
# camcorder::gg_stop_recording()
#
## Data Wrangling ================================
df <- mNIRS::read_data(
r"(C:\OneDrive - UBC\HLI\Trail Runners\Processed Data\M02-Data.xlsx)",
nirs_column = c("SmO2_VL", "SmO2_GC"),
sample_column = "Time",
event_column = "Event",
.keep_all = FALSE,
) |>
remove_outliers(
sample_rate = 1,
remove_fixed_values = c(0, 1),
remove_outliers = TRUE
) |>
# mutate(
#     smo2 = case_when(
#         between(time, 1000, 2000) ~ NA,
#         TRUE ~ smo2),
# ) |>
# handle_missing_data(
#     handle_missing_values = "none"
# ) |>
filter_data(
sample_rate = 1,
handle_missing_values = "interpolate",
filter_method = "smooth-spline",
) |>
print()
ggplot(df) +
{list( ## Settings
aes(x = Time, y = SmO2_VL),
# labs(title = glue::glue(
#     "<span style = 'color:{Palette_JA('Right')}'> </span> "
# )),
coord_cartesian(
xlim = c(NA, NA),
ylim = c(NA, NA)),
theme_JA(),
scale_x_continuous(
name = "time",
# name = "Time (h:mm:ss)",
# labels = format_mmss,
# expand = expansion(mult = 0.01)
),
scale_y_continuous(
name = "smo2",
breaks = scales::breaks_pretty(),
# sec.axis = sec_axis(
#     name = "",
#        transform = ~ (. * (y2max - y2min) - y2max * y1min) / (y1max - y1min) + y2min,
# # aes(y = (yvar - y2min) * (y1max - y1min) / (y2max - y2min) + y1min)
# ),
# expand = expansion(mult = 0.01)
),
# scale_colour_manual(
#   name = NULL,
#   aesthetics = c("colour", "fill"),
#   # breaks = c(),
#   # values = scales::hue_pal()(2),
#   # values = Palette_JA(),
#   # labels = c(),
#   limits = force),
# guides(colour = guide_legend(
#     nrow = 1, byrow = FALSE,
#     override.aes = list(shape = NA, linewidth = 5, alpha = 1))),
NULL)} + ## Settings
{list( ## Data
geom_vline(xintercept = filter(df, grepl("Exercise", Event))$Time),
geom_line(),
# geom_point(),
# geom_point(fill = "white", size = 2.4, shape = 21, stroke = 1),
# geom_point(colour = "white", size = 2.3),
# geom_point(fill = "grey", size = 3.0, shape = 21, stroke = 0, alpha = 0.6),
NULL)} ## Data
#   dir = "ggplots",
#   width = 220,
#   height = 220*2/3,
#   dpi = 300,
#   units = "mm",
#   device = "png",
#   bg = "white")
# camcorder::gg_stop_recording()
#
## Data Wrangling ================================
df <- mNIRS::read_data(
r"(C:\OneDrive - UBC\HLI\Trail Runners\Processed Data\M02-Data.xlsx)",
nirs_column = c("SmO2_VL", "SmO2_GC"),
sample_column = "Time",
event_column = "Event",
.keep_all = FALSE,
) |>
remove_outliers(
sample_rate = 1,
remove_fixed_values = c(0, 1),
remove_outliers = TRUE
) |>
# mutate(
#     smo2 = case_when(
#         between(time, 1000, 2000) ~ NA,
#         TRUE ~ smo2),
# ) |>
# handle_missing_data(
#     handle_missing_values = "none"
# ) |>
filter_data(
sample_rate = 1,
handle_missing_values = "interpolate",
filter_method = "low-pass",
) |>
print()
ggplot(df) +
{list( ## Settings
aes(x = Time, y = SmO2_VL),
# labs(title = glue::glue(
#     "<span style = 'color:{Palette_JA('Right')}'> </span> "
# )),
coord_cartesian(
xlim = c(NA, NA),
ylim = c(NA, NA)),
theme_JA(),
scale_x_continuous(
name = "time",
# name = "Time (h:mm:ss)",
# labels = format_mmss,
# expand = expansion(mult = 0.01)
),
scale_y_continuous(
name = "smo2",
breaks = scales::breaks_pretty(),
# sec.axis = sec_axis(
#     name = "",
#        transform = ~ (. * (y2max - y2min) - y2max * y1min) / (y1max - y1min) + y2min,
# # aes(y = (yvar - y2min) * (y1max - y1min) / (y2max - y2min) + y1min)
# ),
# expand = expansion(mult = 0.01)
),
# scale_colour_manual(
#   name = NULL,
#   aesthetics = c("colour", "fill"),
#   # breaks = c(),
#   # values = scales::hue_pal()(2),
#   # values = Palette_JA(),
#   # labels = c(),
#   limits = force),
# guides(colour = guide_legend(
#     nrow = 1, byrow = FALSE,
#     override.aes = list(shape = NA, linewidth = 5, alpha = 1))),
NULL)} + ## Settings
{list( ## Data
geom_vline(xintercept = filter(df, grepl("Exercise", Event))$Time),
geom_line(),
# geom_point(),
# geom_point(fill = "white", size = 2.4, shape = 21, stroke = 1),
# geom_point(colour = "white", size = 2.3),
# geom_point(fill = "grey", size = 3.0, shape = 21, stroke = 0, alpha = 0.6),
NULL)} ## Data
#   dir = "ggplots",
#   width = 220,
#   height = 220*2/3,
#   dpi = 300,
#   units = "mm",
#   device = "png",
#   bg = "white")
# camcorder::gg_stop_recording()
#
## Data Wrangling ================================
df <- mNIRS::read_data(
r"(C:\OneDrive - UBC\HLI\Trail Runners\Processed Data\M02-Data.xlsx)",
nirs_column = c("SmO2_VL", "SmO2_GC"),
sample_column = "Time",
event_column = "Event",
.keep_all = FALSE,
) |>
remove_outliers(
sample_rate = 1,
remove_fixed_values = c(0, 1),
remove_outliers = TRUE
) |>
# mutate(
#     smo2 = case_when(
#         between(time, 1000, 2000) ~ NA,
#         TRUE ~ smo2),
# ) |>
# handle_missing_data(
#     handle_missing_values = "none"
# ) |>
filter_data(
sample_rate = 1,
handle_missing_values = "interpolate",
filter_method = "low-pass",
filter_parameters = list(n = 2, fc = 0.01)
) |>
print()
#   dir = "ggplots",
#   width = 220,
#   height = 220*2/3,
#   dpi = 300,
#   units = "mm",
#   device = "png",
#   bg = "white")
# camcorder::gg_stop_recording()
#
## Data Wrangling ================================
df <- mNIRS::read_data(
r"(C:\OneDrive - UBC\HLI\Trail Runners\Processed Data\M02-Data.xlsx)",
nirs_column = c("SmO2_VL", "SmO2_GC"),
sample_column = "Time",
event_column = "Event",
.keep_all = FALSE,
) |>
remove_outliers(
sample_rate = 1,
remove_fixed_values = c(0, 1),
remove_outliers = TRUE
) |>
# mutate(
#     smo2 = case_when(
#         between(time, 1000, 2000) ~ NA,
#         TRUE ~ smo2),
# ) |>
# handle_missing_data(
#     handle_missing_values = "none"
# ) |>
filter_data(
sample_rate = 1,
handle_missing_values = "interpolate",
filter_method = "low-pass",
filter_parameters = list(c(n = 2, fc = 0.01))
) |>
print()
ggplot(df) +
{list( ## Settings
aes(x = Time, y = SmO2_VL),
# labs(title = glue::glue(
#     "<span style = 'color:{Palette_JA('Right')}'> </span> "
# )),
coord_cartesian(
xlim = c(NA, NA),
ylim = c(NA, NA)),
theme_JA(),
scale_x_continuous(
name = "time",
# name = "Time (h:mm:ss)",
# labels = format_mmss,
# expand = expansion(mult = 0.01)
),
scale_y_continuous(
name = "smo2",
breaks = scales::breaks_pretty(),
# sec.axis = sec_axis(
#     name = "",
#        transform = ~ (. * (y2max - y2min) - y2max * y1min) / (y1max - y1min) + y2min,
# # aes(y = (yvar - y2min) * (y1max - y1min) / (y2max - y2min) + y1min)
# ),
# expand = expansion(mult = 0.01)
),
# scale_colour_manual(
#   name = NULL,
#   aesthetics = c("colour", "fill"),
#   # breaks = c(),
#   # values = scales::hue_pal()(2),
#   # values = Palette_JA(),
#   # labels = c(),
#   limits = force),
# guides(colour = guide_legend(
#     nrow = 1, byrow = FALSE,
#     override.aes = list(shape = NA, linewidth = 5, alpha = 1))),
NULL)} + ## Settings
{list( ## Data
geom_vline(xintercept = filter(df, grepl("Exercise", Event))$Time),
geom_line(),
# geom_point(),
# geom_point(fill = "white", size = 2.4, shape = 21, stroke = 1),
# geom_point(colour = "white", size = 2.3),
# geom_point(fill = "grey", size = 3.0, shape = 21, stroke = 0, alpha = 0.6),
NULL)} ## Data
