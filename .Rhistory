display_index, NA),
) |>
dplyr::relocate(display_index, fit_index)
}
) |> print(n=40)
data_intake |>
dplyr::select(-index) |>
dplyr::mutate(
display_index = dplyr::row_number() - .x,
) |>
dplyr::slice(indices) |>
dplyr::mutate(
fit_index = dplyr::if_else(
dplyr::between(
display_index,
fit_baseline_window,
fit_kinetics_window),
display_index, NA),
) |>
dplyr::relocate(display_index, fit_index) |> print(n=40)
## data list =================================
data_list <- purrr::map(
event_index_list,
\(.x) {
indices <- pmin(
pmax(.x + start_index:end_index, 1),
nrow(data_intake)) |> unique()
data_intake |>
dplyr::select(-index) |>
dplyr::mutate(
display_index = dplyr::row_number() - .x,
) |>
dplyr::slice(indices) |>
dplyr::mutate(
fit_index = dplyr::if_else(
dplyr::between(
display_index,
fit_baseline_window,
fit_kinetics_window),
display_index, NA),
) |>
dplyr::relocate(display_index, fit_index) |> print(n=40)
}
)
data |>
dplyr::filter(dplyr::if_any(
dplyr::any_of(sample_column),
\(.x) .x %in% event_sample
))
data |>
dplyr::filter(dplyr::if_any(
dplyr::any_of(sample_column),
\(.x) .x %in% event_sample
)) |>
dplyr::pull(any_of(sample_column))
data |>
dplyr::filter(dplyr::if_any(
dplyr::any_of(sample_column),
\(.x) .x %in% event_sample
)) |>
dplyr::pull(dplyr::any_of(sample_column))
data |>
dplyr::mutate(index = dplyr::row_number()) |>
dplyr::filter(index %in% event_index)
data |>
dplyr::mutate(index = dplyr::row_number()) |>
dplyr::filter(index %in% event_index) |>
dplyr::pull(dplyr::any_of(sample_column))
!is.null(event_label)
data_intake |>
dplyr::filter(dplyr::if_any(
dplyr::any_of(event_column),
\(.x) grepl(paste(event_label, collapse = "|"),
.x, ignore.case = TRUE)
)) |>
dplyr::pull(dplyr::any_of(sample_column))
if (!is.null(event_index)) {
event_index_sample <- data |>
dplyr::mutate(index = dplyr::row_number()) |>
dplyr::filter(index %in% event_index) |>
dplyr::pull(dplyr::any_of(sample_column))
} else {event_index_sample <- NULL}
if (!is.null(event_label)) {
event_label_sample <- data_intake |>
dplyr::filter(dplyr::if_any(
dplyr::any_of(event_column),
\(.x) grepl(paste(event_label, collapse = "|"),
.x, ignore.case = TRUE)
)) |>
dplyr::pull(dplyr::any_of(sample_column))
} else {event_label_sample <- NULL}
sort(
c(event_index_sample, event_sample, event_label_sample))
event_index_list
event_sample_list <- sort(
c(event_index_sample, event_sample, event_label_sample))
event_sample_list <- sort(
c(event_index_sample, event_sample, event_label_sample))
fit_baseline_window <- -max(abs(fit_baseline_window))
display_baseline_window <- -max(abs(display_baseline_window))
start_index <- min(c(fit_baseline_window, display_baseline_window))
end_index <- max(c(fit_kinetics_window, display_kinetics_window))
## Metadata =================================
metadata$nirs_columns <- unique(
c(metadata$nirs_columns, nirs_columns))
metadata$sample_column <- sample_column
metadata$event_column <- event_column
metadata$event_sample_list <- event_sample_list
metadata$fit_window <- c(fit_baseline_window, fit_kinetics_window)
metadata$display_window <- c(display_baseline_window, display_kinetics_window)
data_intake <- create_mnirs_data(data_intake, metadata)
attributes(data_intake)
purrr::map(
event_sample_list,
\(.x) {
indices <- pmin(
pmax(.x + start_index:end_index, 1),
nrow(data_intake)) |> unique()
data_intake |>
dplyr::select(-index) |>
dplyr::mutate(
display_index = dplyr::row_number() - .x,
) |>
dplyr::slice(indices) |>
dplyr::mutate(
fit_index = dplyr::if_else(
dplyr::between(
display_index,
fit_baseline_window,
fit_kinetics_window),
display_index, NA),
) |>
dplyr::relocate(display_index, fit_index) |> print(n=40)
}
)
rm(data_intake)
data_pre_list <- create_mnirs_data(data, metadata)
## data list =================================
data_list <- purrr::map(
event_sample_list,
\(.x) {
indices <- pmin(
pmax(.x + start_index:end_index, 1),
nrow(data_pre_list)) |> unique()
data_pre_list |>
dplyr::select(-index) |>
dplyr::mutate(
display_index = dplyr::row_number() - .x,
) |>
dplyr::slice(indices) |>
dplyr::mutate(
fit_index = dplyr::if_else(
dplyr::between(
display_index,
fit_baseline_window,
fit_kinetics_window),
display_index, NA),
) |>
dplyr::relocate(display_index, fit_index) |> print(n=40)
}
)
attributes(data_list[[1]])
attributes(data_list[[2]])
data_list[[2]]
data_pre_list
data
## data list =================================
data_list <- purrr::map(
event_sample_list,
\(.x) {
indices <- pmin(
pmax(.x + start_index:end_index, 1),
nrow(data_pre_list)) |> unique()
data_pre_list |>
dplyr::mutate(
display_index = dplyr::row_number() - .x,
) |>
dplyr::slice(indices) |>
dplyr::mutate(
fit_index = dplyr::if_else(
dplyr::between(
display_index,
fit_baseline_window,
fit_kinetics_window),
display_index, NA),
) |>
dplyr::relocate(display_index, fit_index)
}
)
group_kinetics_events
head(group_kinetics_events, 1) == "distinct"
head(group_kinetics_events, 1) == "ensemble"
purrr::map(
data_list,
\(.df)
.df |>
dplyr::relocate(
display_index, fit_index,
dplyr::any_of(
c(sample_column, event_column, nirs_columns)))
)
data_list
purrr::map(
data_list,
\(.df)
.df |>
dplyr::relocate(
display_index, fit_index,
dplyr::any_of(
c(sample_column, event_column, nirs_columns)))
)
purrr::map(
data_list,
\(.df)
.df |>
dplyr::relocate(display_index, fit_index)
)
head(group_kinetics_events, 1) == "ensemble"
data_list |>
dplyr::bind_rows() |>
dplyr::summarise(
.by = display_index,
dplyr::across(
dplyr::where(is.numeric),
\(.x) mean(.x, na.rm = TRUE)),
dplyr::across(
!dplyr::where(is.numeric),
\(.x) dplyr::first(na.omit(.x))),
) |>
dplyr::mutate(
dplyr::across(
dplyr::where(is.numeric),
\(.x) ifelse(.x %in% c(Inf, -Inf, NaN), NA_real_, .x)),
) |>
dplyr::relocate(display_index, fit_index)
data_list |>
dplyr::bind_rows() |>
dplyr::select(-dplyr::matches(dplyr::any_of(sample_column)))
sample_column
data_list |>
dplyr::bind_rows()
data_list |>
dplyr::bind_rows() |>
dplyr::select(-dplyr::matches(dplyr::any_of(sample_column)))
data_list |>
dplyr::bind_rows() |>
dplyr::select(-dplyr::any_of(sample_column))
data_list |>
dplyr::bind_rows() |>
dplyr::select(-dplyr::any_of(c(sample_column, event_column)))
data_list |>
dplyr::bind_rows() |>
dplyr::select(-dplyr::any_of(c(sample_column, event_column))) |>
dplyr::summarise(
.by = display_index,
dplyr::across(
dplyr::where(is.numeric),
\(.x) mean(.x, na.rm = TRUE)),
dplyr::across(
!dplyr::where(is.numeric),
\(.x) dplyr::first(na.omit(.x))),
) |>
dplyr::mutate(
dplyr::across(
dplyr::where(is.numeric),
\(.x) ifelse(.x %in% c(Inf, -Inf, NaN), NA_real_, .x)),
) |>
dplyr::relocate(display_index, fit_index)
setdiff(
1:length(data_list), unlist(group_kinetics_events))
is.numeric(unlist(group_kinetics_events))
data_list
1:length(data_list)
unlist(group_kinetics_events)
setdiff(
1:length(data_list), unlist(group_kinetics_events))
ungrouped_events <- setdiff(
1:length(data_list), unlist(group_kinetics_events))
seq_along(ungrouped_events)
group_kinetics_events
for (i in seq_along(ungrouped_events)) {
group_kinetics_events[[length(group_kinetics_events)+1]] <-
ungrouped_events[i]
}
group_kinetics_events
data_list
purrr::map(
if (is.list(group_kinetics_events)) {
group_kinetics_events
} else {list(group_kinetics_events)},
\(.x) data_list[.x] |>
dplyr::bind_rows() |>
dplyr::select(
-dplyr::any_of(c(sample_column, event_column))
) |>
dplyr::summarise(
.by = display_index,
dplyr::across(
dplyr::where(is.numeric),
\(.x) mean(.x, na.rm = TRUE)),
dplyr::across(
!dplyr::where(is.numeric),
\(.x) dplyr::first(na.omit(.x))),
) |>
dplyr::mutate(
dplyr::across(
dplyr::where(is.numeric),
\(.x) ifelse(.x %in% c(Inf, -Inf, NaN), NA_real_, .x)),
) |>
dplyr::relocate(
display_index, fit_index,
dplyr::any_of(c(sample_column, event_column, nirs_columns)))
)
if (head(group_kinetics_events, 1) == "distinct") {
y <- purrr::map(
data_list,
\(.df)
.df |>
dplyr::relocate(display_index, fit_index)
)
} else if (head(group_kinetics_events, 1) == "ensemble") {
y <- data_list |>
dplyr::bind_rows() |>
dplyr::select(
-dplyr::any_of(c(sample_column, event_column))
) |>
dplyr::summarise(
.by = display_index,
dplyr::across(
dplyr::where(is.numeric),
\(.x) mean(.x, na.rm = TRUE)),
dplyr::across(
!dplyr::where(is.numeric),
\(.x) dplyr::first(na.omit(.x))),
) |>
dplyr::mutate(
dplyr::across(
dplyr::where(is.numeric),
\(.x) ifelse(.x %in% c(Inf, -Inf, NaN), NA_real_, .x)),
) |>
dplyr::relocate(display_index, fit_index)
} else if (is.numeric(unlist(group_kinetics_events))) {
ungrouped_events <- setdiff(
1:length(data_list), unlist(group_kinetics_events))
for (i in seq_along(ungrouped_events)) {
group_kinetics_events[[length(group_kinetics_events)+1]] <-
ungrouped_events[i]
}
y <- purrr::map(
if (is.list(group_kinetics_events)) {
group_kinetics_events
} else {list(group_kinetics_events)},
\(.x) data_list[.x] |>
dplyr::bind_rows() |>
dplyr::select(
-dplyr::any_of(c(sample_column, event_column))
) |>
dplyr::summarise(
.by = display_index,
dplyr::across(
dplyr::where(is.numeric),
\(.x) mean(.x, na.rm = TRUE)),
dplyr::across(
!dplyr::where(is.numeric),
\(.x) dplyr::first(na.omit(.x))),
) |>
dplyr::mutate(
dplyr::across(
dplyr::where(is.numeric),
\(.x) ifelse(.x %in% c(Inf, -Inf, NaN), NA_real_, .x)),
) |>
dplyr::relocate(
display_index, fit_index,
dplyr::any_of(c(sample_column, event_column, nirs_columns)))
)
}
y
attributes(y)
attributes(y[[1]])
attributes(data_list[[1]])
attributes(y[[1]])
if (head(group_kinetics_events, 1) == "distinct") {
kinetics_data <- purrr::map(
data_list,
\(.df)
.df |>
dplyr::relocate(display_index, fit_index)
)
} else if (head(group_kinetics_events, 1) == "ensemble") {
kinetics_data <- data_list |>
dplyr::bind_rows() |>
dplyr::select(
-dplyr::any_of(c(sample_column, event_column))
) |>
dplyr::summarise(
.by = display_index,
dplyr::across(
dplyr::where(is.numeric),
\(.x) mean(.x, na.rm = TRUE)),
dplyr::across(
!dplyr::where(is.numeric),
\(.x) dplyr::first(na.omit(.x))),
) |>
dplyr::mutate(
dplyr::across(
dplyr::where(is.numeric),
\(.x) ifelse(.x %in% c(Inf, -Inf, NaN), NA_real_, .x)),
) |>
dplyr::relocate(display_index, fit_index)
} else if (is.numeric(unlist(group_kinetics_events))) {
ungrouped_events <- setdiff(
1:length(data_list), unlist(group_kinetics_events))
for (i in seq_along(ungrouped_events)) {
group_kinetics_events[[length(group_kinetics_events)+1]] <-
ungrouped_events[i]
}
kinetics_data <- purrr::map(
if (is.list(group_kinetics_events)) {
group_kinetics_events
} else {list(group_kinetics_events)},
\(.x) {
y <- data_list[.x] |>
dplyr::bind_rows() |>
dplyr::select(
-dplyr::any_of(c(sample_column, event_column))
) |>
dplyr::summarise(
.by = display_index,
dplyr::across(
dplyr::where(is.numeric),
\(.x) mean(.x, na.rm = TRUE)),
dplyr::across(
!dplyr::where(is.numeric),
\(.x) dplyr::first(na.omit(.x))),
) |>
dplyr::mutate(
dplyr::across(
dplyr::where(is.numeric),
\(.x) ifelse(.x %in% c(Inf, -Inf, NaN), NA_real_, .x)),
) |>
dplyr::relocate(
display_index, fit_index,
dplyr::any_of(c(sample_column, event_column, nirs_columns)))
## Metadata =================================
metadata$nirs_columns <- unique(
c(metadata$nirs_columns, nirs_columns))
metadata$sample_column <- sample_column
metadata$event_column <- event_column
metadata$event_sample_list <- event_sample_list
metadata$fit_window <- c(fit_baseline_window,
fit_kinetics_window)
metadata$display_window <- c(display_baseline_window,
display_kinetics_window)
y <- create_mnirs_data(y, metadata)
# attributes(data_pre_list)
})
}
attributes(y[[1]])
attributes(kinetics_data[[1]])
#
(data <- mNIRS::read_data(
file_path = "C:/OneDrive - UBC/Body Position Study/Raw Data/BP01-oxysoft-2025-04-01.xlsx",
nirs_columns = c("PS_O2Hb" = "2",
"PS_HHb" = "3",
"VL_O2Hb" = "5",
"VL_HHb" = "6"),
sample_column = c("sample" = "1"),
event_column = c("label" = "...11"),
.keep_all = FALSE))
# attributes(data)
# # # #
(data_list <- mNIRS::prepare_kinetics_data(
data,
nirs_columns = c("PS_HHb", "VL_HHb"),
sample_column = "sample",
event_column = "label",
event_index = NULL,
event_sample = NULL,
event_label = c("end RP", "end UP", "end stage"),
fit_baseline_window = 30,
fit_kinetics_window = 180,
display_baseline_window = 40,
display_kinetics_window = 240,
group_kinetics_events = list(c(1, 3, 5), c(2, 4)) #"ensemble"
))
#
(data <- mNIRS::read_data(
file_path = "C:/OneDrive - UBC/Body Position Study/Raw Data/BP01-oxysoft-2025-04-01.xlsx",
nirs_columns = c("PS_O2Hb" = "2",
"PS_HHb" = "3",
"VL_O2Hb" = "5",
"VL_HHb" = "6"),
sample_column = c("sample" = "1"),
event_column = c("label" = "...11"),
.keep_all = FALSE))
attributes(data)
# # # #
(data_list <- mNIRS::prepare_kinetics_data(
data,
nirs_columns = c("PS_HHb", "VL_HHb"),
sample_column = "sample",
event_column = "label",
event_index = NULL,
event_sample = NULL,
event_label = c("end RP", "end UP", "end stage"),
fit_baseline_window = 30,
fit_kinetics_window = 180,
display_baseline_window = 40,
display_kinetics_window = 240,
group_kinetics_events = list(c(1, 3, 5), c(2, 4)) #"ensemble"
))
attributes(data_list[[1]])
